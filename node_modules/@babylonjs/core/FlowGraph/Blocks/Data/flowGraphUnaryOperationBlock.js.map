{"version":3,"file":"flowGraphUnaryOperationBlock.js","sourceRoot":"","sources":["../../../../../../dev/core/src/FlowGraph/Blocks/Data/flowGraphUnaryOperationBlock.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,cAAc,EAAE,MAAM,sBAAsB,CAAC;AAItD;;;GAGG;AACH,MAAM,OAAO,4BAA8C,SAAQ,cAAc;IAI7E,YAAY,aAA+B,EAAE,cAAiC,EAAU,UAAsC;QAC1H,KAAK,EAAE,CAAC;QAD4E,eAAU,GAAV,UAAU,CAA4B;QAE1H,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;QAC7D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;IAC3E,CAAC;IAEM,cAAc,CAAC,QAA0B;QAC5C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IACnF,CAAC;CACJ","sourcesContent":["import type { FlowGraphDataConnection } from \"../../flowGraphDataConnection\";\r\nimport { FlowGraphBlock } from \"../../flowGraphBlock\";\r\nimport type { RichType } from \"../../flowGraphRichTypes\";\r\nimport type { FlowGraphContext } from \"../../flowGraphContext\";\r\n\r\n/**\r\n * @experimental\r\n * The base block for all unary operation blocks. Receives an input of type InputT, and outputs a value of type ResultT.\r\n */\r\nexport class FlowGraphUnaryOperationBlock<InputT, ResultT> extends FlowGraphBlock {\r\n    input: FlowGraphDataConnection<InputT>;\r\n    output: FlowGraphDataConnection<ResultT>;\r\n\r\n    constructor(inputRichType: RichType<InputT>, resultRichType: RichType<ResultT>, private _operation: (input: InputT) => ResultT) {\r\n        super();\r\n        this.input = this._registerDataInput(\"input\", inputRichType);\r\n        this.output = this._registerDataOutput(\"resultOutput\", resultRichType);\r\n    }\r\n\r\n    public _updateOutputs(_context: FlowGraphContext): void {\r\n        this.output.setValue(this._operation(this.input.getValue(_context)), _context);\r\n    }\r\n}\r\n"]}