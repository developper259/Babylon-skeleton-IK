import { RichTypeString, RichTypeAny } from "../../flowGraphRichTypes.js";
import { FlowGraphWithOnDoneExecutionBlock } from "../../flowGraphWithOnDoneExecutionBlock.js";
/**
 * @experimental
 * Block that sets a property on a target object.
 * TODO: Add support for animating the property.
 */
export class FlowGraphSetPropertyBlock extends FlowGraphWithOnDoneExecutionBlock {
    constructor() {
        super();
        this.target = this._registerDataInput("target", RichTypeAny);
        this.property = this._registerDataInput("property", RichTypeString);
        this.value = this._registerDataInput("value", RichTypeAny);
    }
    _setProperty(target, property, value) {
        const splitProp = property.split(".");
        let currentTarget = target;
        for (let i = 0; i < splitProp.length - 1; i++) {
            currentTarget = currentTarget[splitProp[i]];
        }
        currentTarget[splitProp[splitProp.length - 1]] = value;
    }
    _execute(context) {
        const target = this.target.getValue(context);
        const property = this.property.getValue(context);
        const value = this.value.getValue(context);
        if (target && property && value) {
            this._setProperty(target, property, value);
        }
        else {
            throw new Error("Invalid target, property or value.");
        }
        this.onDone._activateSignal(context);
    }
}
//# sourceMappingURL=flowGraphSetPropertyBlock.js.map