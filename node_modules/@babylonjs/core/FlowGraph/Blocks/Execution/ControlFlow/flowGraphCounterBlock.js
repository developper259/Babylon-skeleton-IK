import { RichTypeNumber } from "../../../flowGraphRichTypes.js";
import { FlowGraphWithOnDoneExecutionBlock } from "../../../flowGraphWithOnDoneExecutionBlock.js";
/**
 * @experimental
 * A block that counts the number of times it has been called.
 */
export class FlowGraphCounterBlock extends FlowGraphWithOnDoneExecutionBlock {
    constructor() {
        super();
        this.count = this._registerDataOutput("count", RichTypeNumber);
        this.reset = this._registerSignalInput("reset");
    }
    _execute(context, callingSignal) {
        var _a;
        if (callingSignal === this.reset) {
            context._setExecutionVariable(this, "count", 0);
            this.count.setValue(0, context);
            return;
        }
        const countValue = ((_a = context._getExecutionVariable(this, "count")) !== null && _a !== void 0 ? _a : 0) + 1;
        context._setExecutionVariable(this, "count", countValue);
        this.count.setValue(countValue, context);
        this.onDone._activateSignal(context);
    }
}
//# sourceMappingURL=flowGraphCounterBlock.js.map