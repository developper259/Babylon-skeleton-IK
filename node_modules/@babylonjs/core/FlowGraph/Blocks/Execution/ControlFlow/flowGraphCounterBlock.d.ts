import type { FlowGraphContext } from "../../../flowGraphContext";
import type { FlowGraphDataConnection } from "../../../flowGraphDataConnection";
import type { FlowGraphSignalConnection } from "../../../flowGraphSignalConnection";
import { FlowGraphWithOnDoneExecutionBlock } from "../../../flowGraphWithOnDoneExecutionBlock";
/**
 * @experimental
 * A block that counts the number of times it has been called.
 */
export declare class FlowGraphCounterBlock extends FlowGraphWithOnDoneExecutionBlock {
    /**
     * Output connection: The number of times the block has been called.
     */
    readonly count: FlowGraphDataConnection<number>;
    /**
     * Input connection: Resets the counter.
     */
    readonly reset: FlowGraphSignalConnection;
    constructor();
    _execute(context: FlowGraphContext, callingSignal: FlowGraphSignalConnection): void;
}
