import type { FlowGraphContext } from "./flowGraphContext";
import { FlowGraphDataConnection } from "./flowGraphDataConnection";
import type { RichType } from "./flowGraphRichTypes";
/**
 * @experimental
 * A block in a flow graph. The most basic form
 * of a block has inputs and outputs that contain
 * data.
 */
export declare class FlowGraphBlock {
    /**
     * A randomly generated GUID for each block.
     */
    uniqueId: string;
    /**
     * The data inputs of the block.
     */
    readonly dataInputs: FlowGraphDataConnection<any>[];
    /**
     * The data outputs of the block.
     */
    readonly dataOutputs: FlowGraphDataConnection<any>[];
    /** Constructor is protected so only subclasses can be instantiated */
    protected constructor();
    /**
     * @internal
     */
    _updateOutputs(_context: FlowGraphContext): void;
    protected _registerDataInput<T>(name: string, className: RichType<T>): FlowGraphDataConnection<T>;
    protected _registerDataOutput<T>(name: string, className: RichType<T>): FlowGraphDataConnection<T>;
}
