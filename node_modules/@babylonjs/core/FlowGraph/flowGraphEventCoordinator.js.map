{"version":3,"file":"flowGraphEventCoordinator.js","sourceRoot":"","sources":["../../../../dev/core/src/FlowGraph/flowGraphEventCoordinator.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAC;AAGhD;;;;;GAKG;AACH,MAAM,OAAO,yBAAyB;IAAtC;QACY,qBAAgB,GAAkD,IAAI,GAAG,EAAE,CAAC;IA2BxF,CAAC;IAzBG;;;;OAIG;IACH,wBAAwB,CAAC,EAAU;QAC/B,IAAI,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,EAAE;YACb,UAAU,GAAG,IAAI,UAAU,EAAwB,CAAC;YACpD,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;SAC7C;QACD,OAAO,UAAU,CAAC;IACtB,CAAC;IAED;;;;OAIG;IACH,iBAAiB,CAAC,EAAU,EAAE,IAAS;QACnC,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACjD,IAAI,UAAU,EAAE;YACZ,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;SACpC;IACL,CAAC;CACJ","sourcesContent":["import { Observable } from \"../Misc/observable\";\r\nimport type { FlowGraphCustomEvent } from \"./flowGraphCustomEvent\";\r\n\r\n/**\r\n * This class centralizes the handling of events in the flow graph.\r\n * If a block fires an event, it will be handled by this class.\r\n * It will also notify any blocks that are listening to that event.\r\n * @experimental\r\n */\r\nexport class FlowGraphEventCoordinator {\r\n    private _customEventsMap: Map<string, Observable<FlowGraphCustomEvent>> = new Map();\r\n\r\n    /**\r\n     * Get an observable that will be notified when the event with the given id is fired.\r\n     * @param id the id of the event\r\n     * @returns the observable for the event\r\n     */\r\n    getCustomEventObservable(id: string): Observable<FlowGraphCustomEvent> {\r\n        let observable = this._customEventsMap.get(id);\r\n        if (!observable) {\r\n            observable = new Observable<FlowGraphCustomEvent>();\r\n            this._customEventsMap.set(id, observable);\r\n        }\r\n        return observable;\r\n    }\r\n\r\n    /**\r\n     * Notifies the observable for the given event id with the given data.\r\n     * @param id the id of the event\r\n     * @param data the data to send with the event\r\n     */\r\n    notifyCustomEvent(id: string, data: any) {\r\n        const observable = this._customEventsMap.get(id);\r\n        if (observable) {\r\n            observable.notifyObservers(data);\r\n        }\r\n    }\r\n}\r\n"]}